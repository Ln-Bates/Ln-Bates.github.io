[{"title":"JS 路由实现原理","url":"https://ln-bates.github.io/2019/02/08/JS-路由实现原理/","content":"<h3 id=\"前端路由的诞生的缘由\"><a href=\"#前端路由的诞生的缘由\" class=\"headerlink\" title=\"前端路由的诞生的缘由\"></a>前端路由的诞生的缘由</h3><p>90年代初，大多数网页都是通过直接返回HTML的，每次用户操作都需要刷新页面。及其影响交互，Ajax在这时候应运而生。<br>有了Ajax后，用户操作不用每次都刷新页面，体验带来了极大的提升。<br>而异步交互体验的更高级版本就是 SPA（Single Page Application）—— 单页应用。单页应用不仅仅是在页面交互是无刷新的，连页面跳转都是无刷新的，为了实现单页应用，所以就有了前端路由</p>\n<h3 id=\"路由实现\"><a href=\"#路由实现\" class=\"headerlink\" title=\"路由实现\"></a>路由实现</h3><h5 id=\"在2014年之前，大家是通过hash来实现路由的。\"><a href=\"#在2014年之前，大家是通过hash来实现路由的。\" class=\"headerlink\" title=\"在2014年之前，大家是通过hash来实现路由的。\"></a>在2014年之前，大家是通过hash来实现路由的。</h5><p><code>http:www.xxx.com/#/hash1</code><br>‘#’号后边的值变化，不会重新向服务器发送请求，所以就不会在刷新页面。<br>通过hashchange事件我们可以监听hash值的变化，使用JS来替换DOM。</p>\n<h5 id=\"在2014年之后，大家是通过hash来实现路由的。\"><a href=\"#在2014年之后，大家是通过hash来实现路由的。\" class=\"headerlink\" title=\"在2014年之后，大家是通过hash来实现路由的。\"></a>在2014年之后，大家是通过hash来实现路由的。</h5><p>14年后，因为HTML5标准发布。<br>多了两个 API，pushState 和 replaceState，<br>通过这两个 API 可以改变 url 地址且不会发送请求。<br>同时还有 onpopstate 事件。<br>通过这些就能用另一种方式来实现前端路由了，但原理都是跟 hash 实现相同的。<br>用了 HTML5 的实现，<br>单页路由的 url 就不会多出一个#，变得更加美观。<br>但因为没有 # 号，所以当用户刷新页面之类的操作时，浏览器还是会给服务器发送请求。<br>为了避免出现这种情况，<br>所以这个实现需要服务器的支持，需要把所有路由都重定向到根页面。</p>\n","categories":["技术"],"tags":["Javascript"]},{"title":"Vue 多页面配置","url":"https://ln-bates.github.io/2019/01/03/Vue-多页面配置/","content":"<p><a href=\"https://github.com/Ln-Bates/vue-cli3-config/blob/master/vue.config.js\" title=\"Vue多页面配置\" target=\"_blank\" rel=\"external\">Vue多页面配置</a></p>\n","categories":["技术"],"tags":["Vue"]},{"title":"JS Event Loop","url":"https://ln-bates.github.io/2018/12/13/JS-Event-Loop/","content":"<h3 id=\"JS-任务\"><a href=\"#JS-任务\" class=\"headerlink\" title=\"JS 任务\"></a>JS 任务</h3><p>JS任务分为两种，同步任务、异步任务。</p>\n<p>同步和异步任务分别进入不同的执行”场所”，同步的进入主线程，</p>\n<p>异步任务分宏事件和微事件，进入Event Table并注册函数。</p>\n<p>当指定的事情完成时，Event Table会将这个函数移入任务队列(Event Queue)。</p>\n<p>主线程内的任务执行完毕为空，会去Event Queue读取对应的函数，进入主线程执行。</p>\n<p>上述过程会不断重复，也就是常说的Event Loop(事件循环)。</p>\n<p>macro-task(宏任务)：包括整体代码script，setTimeout，setInterval, requestAnimationFrame, callback</p>\n<p>micro-task(微任务)：Promise，catch</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">（1）所有同步任务都在主线程上执行，形成一个执行栈（execution context stack）。</div><div class=\"line\"></div><div class=\"line\">（2）主线程之外，还存在一个&quot;任务队列&quot;（task queue）。只要异步任务有了运行结果，就在&quot;任务队列&quot;之中放置一个事件。</div><div class=\"line\"></div><div class=\"line\">（3）一旦&quot;执行栈&quot;中的所有同步任务执行完毕，系统就会读取&quot;任务队列&quot;，看看里面有哪些事件。那些对应的异步任务，于是结束等待状态，进入执行栈，开始执行。</div><div class=\"line\"></div><div class=\"line\">（4）主线程不断重复上面的第三步。</div></pre></td></tr></table></figure>\n","categories":["技术"],"tags":["Javascript"]},{"title":"JS 异步解决方案","url":"https://ln-bates.github.io/2018/09/08/JS-异步解决方案/","content":"","categories":["技术"],"tags":["Javascript"]},{"title":"JS 事件机制","url":"https://ln-bates.github.io/2018/09/05/JS-事件机制/","content":"<h3 id=\"事件流\"><a href=\"#事件流\" class=\"headerlink\" title=\"事件流\"></a>事件流</h3><p>所谓的标准事件流指的的：<br>EMCAScript标准规定事件流包含三个阶段，<br>分别为<strong>事件捕获阶段</strong>，<strong>处于目标阶段</strong>，<strong>事件冒泡阶段</strong>。</p>\n<h4 id=\"标准事件流\"><a href=\"#标准事件流\" class=\"headerlink\" title=\"标准事件流\"></a>标准事件流</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">1. doc</div><div class=\"line\">    2. parent</div><div class=\"line\">        3. child =&gt;click</div></pre></td></tr></table></figure>\n<p>在标准事件流中事件触发分为三个阶段<br>捕获阶段 1, 2, 3处于目标阶段 紧接着冒泡2, 1 </p>\n<h4 id=\"IE事件流\"><a href=\"#IE事件流\" class=\"headerlink\" title=\"IE事件流\"></a>IE事件流</h4><p>虽然大部分的浏览器都遵循着标准，但是在IE浏览器中，事件流却是非标准的。IE中事件流只有两个阶段： 处于目标阶段，冒泡阶段。 </p>\n<h4 id=\"事件顺序\"><a href=\"#事件顺序\" class=\"headerlink\" title=\"事件顺序\"></a>事件顺序</h4><p>某些事件有默认行为，比如点击超链接会跳转。</p>\n<p>一般的事件执行顺序:</p>\n<p>事件捕获 =&gt; 处于目标 =&gt; 事件冒泡 =&gt; 默认行为<br>阻止默认行为发生<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">标准浏览器: </div><div class=\"line\">    callback(event)&#123;</div><div class=\"line\">        event.preventDetault();</div><div class=\"line\">    &#125;</div><div class=\"line\">IE:</div><div class=\"line\">    callback(event)&#123;</div><div class=\"line\">        event.returnValue = false;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<h4 id=\"阻止事件传播\"><a href=\"#阻止事件传播\" class=\"headerlink\" title=\"阻止事件传播\"></a>阻止事件传播</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">callback(event)&#123;</div><div class=\"line\">    event.stopPropagation();</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","categories":["技术"],"tags":["Javascript"]},{"title":"CSS 盒模型","url":"https://ln-bates.github.io/2018/07/07/CSS-盒模型/","content":"<h2 id=\"CSS-盒模型理解\"><a href=\"#CSS-盒模型理解\" class=\"headerlink\" title=\"CSS 盒模型理解\"></a>CSS 盒模型理解</h2><p>盒子模型是html+css中最核心的基础知识，理解了这个重要的概念才能更好的排版，希望对初学者有用。</p>\n<h3 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h3><p>CSS盒子模型包含了元素(content)、内边距(padding)、边框(border)、外边距(margin)几个要素。</p>\n<h4 id=\"如图\"><a href=\"#如图\" class=\"headerlink\" title=\"如图:\"></a>如图:</h4><p><img src=\"https://images2015.cnblogs.com/blog/993105/201607/993105-20160722121801872-494280136.gif\" alt=\"avatar\"></p>\n<p>图中最内部的框是元素的实际内容，也就是元素框，<br>紧挨着元素框外部的是内边距(padding)，<br>其次是边框（border），<br>然后最外层是外边距（margin），<br>整个构成了框模型。通常我们设置的背景显示区域，就是内容、内边距、边框这一块范围。<br>而外边距margin是透明的，不会遮挡周边的其他元素。</p>\n<p>元素框的总宽度 = 元素宽度 + 内边距的左右值 + 边框的左右值 + 外边距的左右值 (标准盒模型)</p>\n<p>元素框的总高度 = 元素高度 + 内边距的上下值 + 边框的上下值的 ＋ 外边距的上下值 (标准盒模型)</p>\n<h3 id=\"外边距合并\"><a href=\"#外边距合并\" class=\"headerlink\" title=\"外边距合并\"></a>外边距合并</h3><p>相邻两个盒模型都有外边距的情况会发生”融合”，两种情况</p>\n<h4 id=\"代码示例\"><a href=\"#代码示例\" class=\"headerlink\" title=\"代码示例\"></a>代码示例</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;style&gt;</div><div class=\"line\">    .box-1 &#123;margin-bottom: 10px;&#125;</div><div class=\"line\">    .box-2 &#123;margin-top: 20px;&#125;</div><div class=\"line\">&lt;/style&gt;</div><div class=\"line\">&lt;div class=&quot;box-1&quot;&gt;&lt;/div&gt;</div><div class=\"line\">&lt;div class=&quot;box-2&quot;&gt;&lt;/div&gt;</div></pre></td></tr></table></figure>\n<p>情况1: 外边距都为正值，外边距会采用较大的一个值为结果。</p>\n<h4 id=\"代码示例-1\"><a href=\"#代码示例-1\" class=\"headerlink\" title=\"代码示例\"></a>代码示例</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;style&gt;</div><div class=\"line\">    .box-1 &#123;margin-bottom: 20px;&#125;</div><div class=\"line\">    .box-2 &#123;margin-top: -10px;&#125;</div><div class=\"line\">&lt;/style&gt;</div><div class=\"line\">&lt;div class=&quot;box-1&quot;&gt;&lt;/div&gt;</div><div class=\"line\">&lt;div class=&quot;box-2&quot;&gt;&lt;/div&gt;</div></pre></td></tr></table></figure>\n<p>情况2: 外边距有负值，外边距会采用两者相加为结果。</p>\n<h3 id=\"怪异盒模型\"><a href=\"#怪异盒模型\" class=\"headerlink\" title=\"怪异盒模型\"></a>怪异盒模型</h3><p>box-sizing属性可以为三个值之一：content-box（default），border-box，padding-box。</p>\n<ol>\n<li>content-box，border和padding不计算入width之内</li>\n<li>padding-box，padding计算入width内</li>\n<li>border-box，border和padding计算入width之内，其实就是怪异模式了。</li>\n</ol>\n","categories":["技术"],"tags":["CSS"]},{"title":"Vue 组件中的通信","url":"https://ln-bates.github.io/2018/06/17/Vue-组件中的通信/","content":"<h4 id=\"props和-emit\"><a href=\"#props和-emit\" class=\"headerlink\" title=\"props和$emit\"></a>props和$emit</h4><p><strong><em>父组件向子组件传参通过prop</em></strong><br><strong><em>子组件向父组件传参通过$emit</em></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div></pre></td><td class=\"code\"><pre><div class=\"line\">Vue.component(&apos;child&apos;, &#123;</div><div class=\"line\">    props: [&apos;parentMsg&apos;], // 父组件传递的数据</div><div class=\"line\">    data() &#123;</div><div class=\"line\">        return &#123;</div><div class=\"line\">            title: &apos;child-title&apos;,</div><div class=\"line\">            model: &apos;&apos;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    template: `</div><div class=\"line\">        &lt;div class=&quot;child&quot;&gt;</div><div class=\"line\">            &lt;h2&gt;&#123;&#123;title&#125;&#125;&lt;/h2&gt;</div><div class=\"line\">            &lt;p&gt;父组件Props传递: &#123;&#123;parentMsg&#125;&#125;&lt;/p&gt;</div><div class=\"line\">            &lt;input v-model=&quot;model&quot; @input=&quot;toParent&quot;/&gt;</div><div class=\"line\">        &lt;/div&gt;</div><div class=\"line\">    `,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        toParent() &#123;</div><div class=\"line\">            this.$emit(&apos;childChangeModel&apos;, this.model); // 触发自定义事件</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">Vue.component(&apos;parent&apos;, &#123;</div><div class=\"line\">    data() &#123;</div><div class=\"line\">        return &#123;</div><div class=\"line\">            title: &apos;parent-title&apos;,</div><div class=\"line\">            sendChild: &apos;some msg&apos;,</div><div class=\"line\">            childModel: &apos;暂无传递&apos;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    template: `</div><div class=\"line\">        &lt;div class=&quot;parent&quot;&gt;</div><div class=\"line\">            &lt;h1&gt;&#123;&#123;title&#125;&#125;&lt;/h1&gt;</div><div class=\"line\">            &lt;p&gt;&#123;&#123;childModel&#125;&#125;&lt;/p&gt;</div><div class=\"line\">            &lt;hr&gt;</div><div class=\"line\">            &lt;child :parentMsg=&quot;sendChild&quot; @childChangeModel=&quot;parentReceive&quot;&gt;&lt;/child&gt;</div><div class=\"line\">        &lt;/div&gt;</div><div class=\"line\">    `,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        parentReceive(msg) &#123; // 自定义事件监听后回调</div><div class=\"line\">            this.childModel = msg;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">let app = new Vue(&#123;</div><div class=\"line\">    el: &apos;#app&apos;,</div><div class=\"line\">    template: &apos;&lt;div&gt;&lt;parent&gt;&lt;/parent&gt;&lt;/div&gt;&apos;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h4 id=\"中央事件总线-event-bus\"><a href=\"#中央事件总线-event-bus\" class=\"headerlink\" title=\"中央事件总线 event bus\"></a>中央事件总线 event bus</h4><p><strong><em>同级或者跨级新建一个中间件为事件监听派发</em></strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div></pre></td><td class=\"code\"><pre><div class=\"line\">let bus = new Vue(); // 中央事件总线</div><div class=\"line\"></div><div class=\"line\">Vue.component(&apos;c1&apos;, &#123;</div><div class=\"line\">    data() &#123;</div><div class=\"line\">        return &#123;</div><div class=\"line\">            msg: &apos;组件Msg(1)&apos;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    template: `</div><div class=\"line\">        &lt;div&gt;</div><div class=\"line\">            &lt;p&gt;这是组件1&lt;/p&gt;</div><div class=\"line\">            &lt;input type=&quot;text&quot; v-model=&quot;msg&quot; @input=&quot;triggerBus(msg)&quot;&gt;</div><div class=\"line\">        &lt;/div&gt;</div><div class=\"line\">    `,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        triggerBus(val) &#123;</div><div class=\"line\">            bus.$emit(&apos;triggerBus&apos;, val); // 触发全局事件</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">Vue.component(&apos;c2&apos;, &#123;</div><div class=\"line\">    template: `</div><div class=\"line\">        &lt;div&gt;</div><div class=\"line\">            &lt;p&gt;这是组件1&lt;/p&gt;</div><div class=\"line\">            &lt;p&gt;brother1传递过来的数据：&#123;&#123;otherMsg&#125;&#125;&lt;/p&gt;</div><div class=\"line\">        &lt;/div&gt;</div><div class=\"line\">    `,</div><div class=\"line\">    data() &#123;</div><div class=\"line\">        return &#123;</div><div class=\"line\">            msg: &apos;组件Msg(2)&apos;,</div><div class=\"line\">            otherMsg: &apos;&apos;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    mounted() &#123;</div><div class=\"line\">        bus.$on(&apos;triggerBus&apos;, val =&gt; &#123; // 监听全局事件</div><div class=\"line\">            this.otherMsg = val;</div><div class=\"line\">        &#125;)</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">let app = new Vue(&#123;</div><div class=\"line\">    el: &apos;#app&apos;,</div><div class=\"line\">    template: `</div><div class=\"line\">        &lt;div&gt;</div><div class=\"line\">            &lt;c1&gt;&lt;/c1&gt;</div><div class=\"line\">            &lt;c2&gt;&lt;/c2&gt;</div><div class=\"line\">        &lt;/div&gt;</div><div class=\"line\">    `</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<h4 id=\"provide和inject\"><a href=\"#provide和inject\" class=\"headerlink\" title=\"provide和inject\"></a>provide和inject</h4><p><strong><em>有父组件向下派发provide子组件接受inject(只要在父组件生命周期内,多深的层级都可以接收到)</em></strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div></pre></td><td class=\"code\"><pre><div class=\"line\">Vue.component(&apos;test&apos;, &#123;</div><div class=\"line\">    inject: [&apos;rootMsg&apos;],//得到父组件传递过来的数据</div><div class=\"line\">    data() &#123;</div><div class=\"line\">        return &#123;</div><div class=\"line\">            msg: this.rootMsg</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    template: &apos;&lt;h3&gt;这是第三级组件我接收到了根组件的数据: &#123;&#123;msg&#125;&#125;&lt;/h3&gt;&apos;</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">Vue.component(&apos;child&apos;, &#123;</div><div class=\"line\">    inject: [&apos;rootMsg&apos;],//得到父组件传递过来的数据</div><div class=\"line\">    data() &#123;</div><div class=\"line\">        return &#123;</div><div class=\"line\">            msg: this.rootMsg</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    template: `</div><div class=\"line\">        &lt;div&gt;</div><div class=\"line\">            &lt;h2&gt;这是第二级组件我接收到了父组件的数据: &#123;&#123;msg&#125;&#125;&lt;/h2&gt;</div><div class=\"line\">            &lt;test&gt;&lt;/test&gt;</div><div class=\"line\">        &lt;/div&gt;</div><div class=\"line\">    `</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">Vue.component(&apos;parent&apos;, &#123;</div><div class=\"line\">    template: `&lt;div&gt;&#123;&#123;title&#125;&#125;&lt;child&gt;&lt;/child&gt;&lt;/div&gt;`,</div><div class=\"line\">    provide: &#123;</div><div class=\"line\">        rootMsg: &apos;test&apos;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    data() &#123;</div><div class=\"line\">        return &#123;</div><div class=\"line\">            title: &apos;父组件&apos;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">let app = new Vue(&#123;</div><div class=\"line\">    el: &apos;#app&apos;,</div><div class=\"line\">    template: `&lt;div&gt;&lt;parent&gt;&lt;/parent&gt;&lt;/div&gt;`</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure></p>\n<h4 id=\"v-model\"><a href=\"#v-model\" class=\"headerlink\" title=\"v-model\"></a>v-model</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div></pre></td><td class=\"code\"><pre><div class=\"line\">Vue.component(&apos;child&apos;, &#123;</div><div class=\"line\">    props: [&apos;value&apos;], //通过v-model传参 子组件props会有一个为value的字段</div><div class=\"line\">    data() &#123;</div><div class=\"line\">        return &#123;</div><div class=\"line\">            msg: this.value</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    template: `&lt;div&gt;&lt;input type=&quot;text&quot; v-model=&quot;msg&quot;&gt;&lt;/div&gt;`</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">Vue.component(&apos;parent&apos;, &#123;</div><div class=\"line\">    template: `</div><div class=\"line\">        &lt;div&gt;</div><div class=\"line\">            &lt;h1&gt;这是父组件&lt;/h1&gt;</div><div class=\"line\">            &lt;child v-model=&quot;msg&quot;&gt;&lt;/child&gt;</div><div class=\"line\">        &lt;/div&gt;</div><div class=\"line\">        `,</div><div class=\"line\">    data() &#123;</div><div class=\"line\">        return &#123;</div><div class=\"line\">            msg: &apos;父组件信息&apos;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">let app = new Vue(&#123;</div><div class=\"line\">    el: &apos;#app&apos;,</div><div class=\"line\">    template: `&lt;div&gt;&lt;parent&gt;&lt;/parent&gt;&lt;/div&gt;`</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p><strong><em>父组件通过v-model传递值给子组件时，会传递一个为value的prop属性</em></strong></p>\n<h4 id=\"parent和-children\"><a href=\"#parent和-children\" class=\"headerlink\" title=\"$parent和$children\"></a>$parent和$children</h4><p><strong><em>$parent父组件的实例$children子组件的实例(集合)</em></strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div></pre></td><td class=\"code\"><pre><div class=\"line\">Vue.component(&apos;child&apos;, &#123;</div><div class=\"line\">    name: &apos;childComponent&apos;,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        changeParentVal() &#123;</div><div class=\"line\">            this.$parent.msg = this.parentMsg; // 修改父组件数据</div><div class=\"line\">        &#125;,</div><div class=\"line\">    &#125;,</div><div class=\"line\">    data() &#123;</div><div class=\"line\">        return &#123;</div><div class=\"line\">            parentMsg: this.$parent.msg,</div><div class=\"line\">            desc: &apos;子组件描述&apos;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    template: `</div><div class=\"line\">        &lt;div&gt;</div><div class=\"line\">            &lt;h2&gt;子组件&lt;/h2&gt;</div><div class=\"line\">            &lt;p&gt;&#123;&#123;desc&#125;&#125;&lt;/p&gt;</div><div class=\"line\">            &lt;input type=&quot;text&quot; v-model=&quot;parentMsg&quot; @change=&quot;changeParentVal&quot;&gt;</div><div class=\"line\">        &lt;/div&gt;`</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">Vue.component(&apos;parent&apos;, &#123;</div><div class=\"line\">    template: `</div><div class=\"line\">        &lt;div&gt;</div><div class=\"line\">            &lt;h1&gt;父组件&lt;/h1&gt;</div><div class=\"line\">            &lt;p&gt;&#123;&#123;msg&#125;&#125;&lt;/p&gt;</div><div class=\"line\">            &lt;button @click=&quot;changeChildVal&quot;&gt;test&lt;/button &gt;</div><div class=\"line\">            &lt;hr&gt;</div><div class=\"line\">            &lt;child&gt;&lt;/child&gt;</div><div class=\"line\">        &lt;/div&gt;</div><div class=\"line\">            `,</div><div class=\"line\">    methods: &#123;</div><div class=\"line\">        changeChildVal() &#123;</div><div class=\"line\">            console.log(this.$children);</div><div class=\"line\">            this.$children[0].desc = &apos;父组件修改了子组件&apos;; // 修改子组件信息</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    data() &#123;</div><div class=\"line\">        return &#123;</div><div class=\"line\">            msg: &apos;我是父组件是信息&apos;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">let app = new Vue(&#123;</div><div class=\"line\">    el: &apos;#app&apos;,</div><div class=\"line\">    template: `&lt;div&gt;&lt;parent&gt;&lt;/parent&gt;&lt;/div&gt;`</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<h4 id=\"vuex处理组件之间的数据交互\"><a href=\"#vuex处理组件之间的数据交互\" class=\"headerlink\" title=\"vuex处理组件之间的数据交互\"></a>vuex处理组件之间的数据交互</h4><p>More info: <a href=\"https://vuex.vuejs.org/zh/guide/\" target=\"_blank\" rel=\"external\">Vuex</a></p>\n<h4 id=\"attrs和-listeners\"><a href=\"#attrs和-listeners\" class=\"headerlink\" title=\"$attrs和$listeners\"></a>$attrs和$listeners</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">...</div></pre></td></tr></table></figure>","categories":["技术"],"tags":["Vue"]},{"title":"本地存储","url":"https://ln-bates.github.io/2018/05/24/本地存储/","content":"<h3 id=\"web-Storage和Cookie的区别\"><a href=\"#web-Storage和Cookie的区别\" class=\"headerlink\" title=\"web Storage和Cookie的区别\"></a>web Storage和Cookie的区别</h3><p>本地存储分为两种,web Storage(localStorage、sessionStorage)、cookie。</p>\n<h4 id=\"web-Storage的好处\"><a href=\"#web-Storage的好处\" class=\"headerlink\" title=\"web Storage的好处:\"></a>web Storage的好处:</h4><ol>\n<li>减少网络流量：一旦数据保存在本地之后，就可以避免再向服务器请求数据，因此减少不必要的数据请求，减少数据在浏览器和服务器间不必要的来回传递</li>\n<li>快速显示数据：性能好，从本地读数据比通过网络从服务器上获得数据快得多，本地数据可以及时获得，再加上网页本身也可以有缓存，因此整个页面和数据都在本地的话，可以立即显示</li>\n<li>临时存储：很多时候数据只需要在用户浏览一组页面期间使用，关闭窗口后数据就可以丢弃了，这种情况使用sessionStorage非常方便</li>\n</ol>\n<h4 id=\"web-Storage的缺点\"><a href=\"#web-Storage的缺点\" class=\"headerlink\" title=\"web Storage的缺点:\"></a>web Storage的缺点:</h4><ol>\n<li>每条数据的key-val记录在浏览器面板上，一旦有xss漏洞就会被人利用恶意代码注入web Storage中。</li>\n<li>兼容性问题。</li>\n<li>浏览器隐身模式无法记录web Storage。</li>\n</ol>\n<h4 id=\"Cookie的好处\"><a href=\"#Cookie的好处\" class=\"headerlink\" title=\"Cookie的好处:\"></a>Cookie的好处:</h4><p>1.通过良好的编程，控制保存在cookie中的session对象的大小。<br>2.通过加密和安全传输技术（SSL），减少cookie被破解的可能性。<br>3.只在cookie中存放不敏感数据，即使被盗也不会有重大损失。<br>4.控制cookie的生命期，使之不会永远有效。偷盗者很可能拿到一个过期的cookie。</p>\n<h4 id=\"Cookie的缺点\"><a href=\"#Cookie的缺点\" class=\"headerlink\" title=\"Cookie的缺点:\"></a>Cookie的缺点:</h4><ol>\n<li>Cookie数量和长度的限制。每个domain最多只能有20条cookie，每个cookie长度不能超过4KB，否则会被截掉。</li>\n<li>安全性问题。如果cookie被人拦截了，那人就可以取得所有的session信息。即使加密也与事无补，因为拦截者并不需要知道cookie的意义，他只要原样转发cookie就可以达到目的了。</li>\n<li>有些状态不可能保存在客户端。例如，为了防止重复提交表单，我们需要在服务器端保存一个计数器。如果我们把这个计数器保存在客户端，那么它起不到任何作用。</li>\n</ol>\n<h4 id=\"共同点：\"><a href=\"#共同点：\" class=\"headerlink\" title=\"共同点：\"></a>共同点：</h4><p>都是保存在浏览器端、且同源的 </p>\n<h4 id=\"区别：\"><a href=\"#区别：\" class=\"headerlink\" title=\"区别：\"></a>区别：</h4><ol>\n<li>cookie数据始终在同源的http请求中携带（即使不需要），即cookie在浏览器和服务器间来回传递，而sessionStorage和localStorage不会自动把数据发送给服务器，仅在本地保存。cookie数据还有路径（path）的概念，可以限制cookie只属于某个路径下 </li>\n<li>存储大小限制也不同，cookie数据不能超过4K，同时因为每次http请求都会携带cookie、所以cookie只适合保存很小的数据，如会话标识。sessionStorage和localStorage虽然也有存储大小的限制，但比cookie大得多，可以达到5M或更大 </li>\n<li>数据有效期不同，sessionStorage：仅在当前浏览器窗口关闭之前有效；localStorage：始终有效，窗口或浏览器关闭也一直保存，因此用作持久数据；cookie：只在设置的cookie过期时间之前有效，即使窗口关闭或浏览器关闭 </li>\n<li>作用域不同，sessionStorage不在不同的浏览器窗口中共享，即使是同一个页面；localstorage在所有同源窗口中都是共享的；cookie也是在所有同源窗口中都是共享的 </li>\n<li>web Storage支持事件通知机制，可以将数据更新的通知发送给监听者 </li>\n<li>web Storage的api接口使用更方便</li>\n</ol>\n","categories":["技术"],"tags":["Javascript"]},{"title":"移动端 1像素边框","url":"https://ln-bates.github.io/2018/04/11/移动端-1像素边框/","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">.border-1&#123;</div><div class=\"line\">    position: relative;</div><div class=\"line\">    &amp;:after&#123;</div><div class=\"line\">        position: absolute;</div><div class=\"line\">        left: 0;</div><div class=\"line\">        bottom: 0;</div><div class=\"line\">        transform: scaleY(.5);</div><div class=\"line\">        width: 100%;</div><div class=\"line\">        height: 1px;</div><div class=\"line\">        content: &apos;&apos;;</div><div class=\"line\">        background: red;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">/* 2x */</div><div class=\"line\">@media only screen and (-webkit-min-device-pixel-ratio: 2.0) &#123;</div><div class=\"line\">    .border::after &#123;</div><div class=\"line\">        transform: scaleY(.5);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">/* 3x */</div><div class=\"line\">@media only screen and (-webkit-min-device-pixel-ratio: 3.0) &#123;</div><div class=\"line\">    .border::after &#123;</div><div class=\"line\">        transform: scaleY(.33);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","categories":["技术"],"tags":["CSS"]},{"title":"JS 闭包的理解","url":"https://ln-bates.github.io/2017/12/08/JS-闭包的理解/","content":"<p>当内部函数以某一种方式被任何一个外部函数作用域访问时，一个闭包就产生了。</p>\n<p>闭包最大用处有两个:</p>\n<ol>\n<li>可以读取函数内部的变量，</li>\n<li>让这些变量的值始终保持在内存中</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">function outer()&#123;</div><div class=\"line\">    var index = 1;</div><div class=\"line\">    function inner()&#123;</div><div class=\"line\">        index++;</div><div class=\"line\">        return index;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return inner;</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\">var test = outer();</div><div class=\"line\">test(); // 2</div><div class=\"line\">test(); // 3</div><div class=\"line\">test(); // 4</div></pre></td></tr></table></figure>\n<p>inner被全局变量test代理，而函数inner的执行依赖outer所以outer也被保存在内存中。</p>\n<p>闭包的优点:</p>\n<ol>\n<li>避免全局变量的污染。</li>\n<li>保护函数内的变量安全,加强了封装性。 </li>\n<li>保存变量。</li>\n</ol>\n<p>闭包的缺点:</p>\n<ol>\n<li>由于闭包会使得函数中的变量都被保存在内存中，内存消耗很大，所以不能滥用闭包，否则会造成网页的性能问题，在IE中可能导致内存泄露。</li>\n</ol>\n<p>解决方法是，在退出函数之前，将不使用的局部变量全部删除。</p>\n","categories":["技术"],"tags":["Javascript"]},{"title":"让盒子居中的几种方法","url":"https://ln-bates.github.io/2017/06/01/让盒子居中的几种方法/","content":"<p>让已知宽度和高度的盒子居中的两种方法，通过绝对定位实现，会跟着浏览器窗口的缩放不断调整位置，一直居中<br>方法一：通过绝对定位，定位时上边距与左边距都给50%，在利用margin减去当前盒子的一半宽度与高度<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">.box &#123;</div><div class=\"line\">    position: absolute;</div><div class=\"line\">    top: 50%;</div><div class=\"line\">    left: 50%;</div><div class=\"line\">    width: 100px;</div><div class=\"line\">    height: 100px;</div><div class=\"line\">    margin: -50px 0 0 -50px;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>方法二：通过绝对定位给4个方向都为0；用margin自动，实现居中<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">.box &#123;</div><div class=\"line\">    position: absolute;</div><div class=\"line\">    top: 0;</div><div class=\"line\">    right: 0;</div><div class=\"line\">    bottom: 0;</div><div class=\"line\">    left: 0;</div><div class=\"line\">    width: 100px;</div><div class=\"line\">    height: 100px;</div><div class=\"line\">    margin: auto;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>方法三：在不知道width、height的情况下，利用transform:translate(-50%, -50%)一样可以做到<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">.box &#123;</div><div class=\"line\">    position: absolute;</div><div class=\"line\">    top: 50%;</div><div class=\"line\">    left: 50%;</div><div class=\"line\">    width: 100px;</div><div class=\"line\">    height: 100px;</div><div class=\"line\">    transform: translate(-50%, -50%);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","categories":["技术"],"tags":["CSS"]},{"title":"npm 常用命令","url":"https://ln-bates.github.io/2017/05/29/npm-常用命令/","content":"<h2 id=\"npm-常用指令\"><a href=\"#npm-常用指令\" class=\"headerlink\" title=\"npm 常用指令\"></a>npm 常用指令</h2><h3 id=\"安装本地依赖包\"><a href=\"#安装本地依赖包\" class=\"headerlink\" title=\"安装本地依赖包\"></a>安装本地依赖包</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">全写: npm install package</div><div class=\"line\">简写: npm i package</div></pre></td></tr></table></figure>\n<h3 id=\"安装全局依赖包\"><a href=\"#安装全局依赖包\" class=\"headerlink\" title=\"安装全局依赖包\"></a>安装全局依赖包</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">全写: npm install -g package //g == global</div><div class=\"line\">简写: npm i -g package</div></pre></td></tr></table></figure>\n<h3 id=\"安装包并包含在生产依赖中\"><a href=\"#安装包并包含在生产依赖中\" class=\"headerlink\" title=\"安装包并包含在生产依赖中\"></a>安装包并包含在生产依赖中</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">全写：npm install –save package</div><div class=\"line\">简写：npm i -S package</div></pre></td></tr></table></figure>\n<h3 id=\"安装包并包含在开发依赖中\"><a href=\"#安装包并包含在开发依赖中\" class=\"headerlink\" title=\"安装包并包含在开发依赖中\"></a>安装包并包含在开发依赖中</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">全写：npm install –save-dev package</div><div class=\"line\">简写：npm i -D package</div></pre></td></tr></table></figure>\n<h3 id=\"枚举已安装的依赖包\"><a href=\"#枚举已安装的依赖包\" class=\"headerlink\" title=\"枚举已安装的依赖包\"></a>枚举已安装的依赖包</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm ls –depth 0</div><div class=\"line\">npm ls -g –depth 0(全局)</div></pre></td></tr></table></figure>\n<h3 id=\"卸载一个包\"><a href=\"#卸载一个包\" class=\"headerlink\" title=\"卸载一个包\"></a>卸载一个包</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm uninstall pkg</div></pre></td></tr></table></figure>\n","categories":["技术"],"tags":["node"]},{"title":"meta标签整理","url":"https://ln-bates.github.io/2017/03/19/meta标签整理/","content":"<p>文章内容均来自他出，每次都会用到一些meta标签，这里做一下整理</p>\n<h3 id=\"声明文档使用的字符编码\"><a href=\"#声明文档使用的字符编码\" class=\"headerlink\" title=\"声明文档使用的字符编码\"></a>声明文档使用的字符编码</h3><p><code>&lt;meta charset=&quot;utf-8&quot;&gt;</code></p>\n<h3 id=\"移动端开发Viewport\"><a href=\"#移动端开发Viewport\" class=\"headerlink\" title=\"移动端开发Viewport\"></a>移动端开发Viewport</h3><p><code>width=viewport</code> 宽度(数值/device-width)</p>\n<p><code>height=viewport</code> 高度(数值/device-height)</p>\n<p><code>initial-scale</code> 初始缩放比例</p>\n<p><code>maximum-scale</code> 最大缩放比例</p>\n<p><code>minimum-scale</code> 最小缩放比例</p>\n<p><code>user-scalable</code> 是否允许用户缩放(yes/no)</p>\n<p><code>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0&quot;&gt;</code></p>\n<h3 id=\"设置IE浏览器渲染页面的兼容模式\"><a href=\"#设置IE浏览器渲染页面的兼容模式\" class=\"headerlink\" title=\"设置IE浏览器渲染页面的兼容模式\"></a>设置IE浏览器渲染页面的兼容模式</h3><p><code>ie=edge</code> 以IE可用最高版本渲染页面</p>\n<p><code>chrome=1</code> Google Chrome Frame(谷歌内嵌浏览器框架GCF)，插件可以让用户的IE浏览器外不变，但用户在浏览网页时，实际上使用的是Chrome浏览器内核</p>\n<p><code>&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge, chrome=1&quot;&gt;</code></p>\n<h3 id=\"SEO优化\"><a href=\"#SEO优化\" class=\"headerlink\" title=\"SEO优化\"></a>SEO优化</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- 定义页面的关键词，一般不超过100字符 --&gt;</div><div class=\"line\">&lt;meta name=&quot;keywords&quot; content=&quot;key1, key2, ...&quot;&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- 定义页面的描述，一般不超过200字符 --&gt;</div><div class=\"line\">&lt;meta name=&quot;description&quot; content=&quot;描述不超过200字符&quot;&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"禁止数字识自动别为电话号码\"><a href=\"#禁止数字识自动别为电话号码\" class=\"headerlink\" title=\"禁止数字识自动别为电话号码\"></a>禁止数字识自动别为电话号码</h3><p><code>&lt;meta name=&quot;format-detection&quot; content=&quot;telephone=no&quot;&gt;</code></p>\n<h3 id=\"禁止识别邮箱\"><a href=\"#禁止识别邮箱\" class=\"headerlink\" title=\"禁止识别邮箱\"></a>禁止识别邮箱</h3><p><code>&lt;meta name=&quot;format-detection&quot; content=&quot;email=no&quot;&gt;</code></p>\n<h3 id=\"国产浏览器指定模式渲染\"><a href=\"#国产浏览器指定模式渲染\" class=\"headerlink\" title=\"国产浏览器指定模式渲染\"></a>国产浏览器指定模式渲染</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- 360写法 --&gt;</div><div class=\"line\">&lt;meta name=&quot;renderer&quot; content=&quot;webkit&quot;&gt; </div><div class=\"line\">&lt;!-- 其他浏览器写法 --&gt;</div><div class=\"line\">&lt;meta name=&quot;force-rendering&quot; content=&quot;webkit&quot;&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"QQ浏览器\"><a href=\"#QQ浏览器\" class=\"headerlink\" title=\"QQ浏览器\"></a>QQ浏览器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- 在指定方向上锁定屏幕（锁定横/竖屏） --&gt;</div><div class=\"line\">&lt;meta name=&quot;x5-orientation&quot; content=&quot;landscape/portrait&quot;&gt;</div><div class=\"line\">&lt;!-- 全屏显示此页面 --&gt;</div><div class=\"line\">&lt;meta name=&quot;x5-fullscreen&quot; content=&quot;true&quot;&gt;</div><div class=\"line\">&lt;!-- 页面将以“应用模式”显示（全屏等）--&gt;</div><div class=\"line\">&lt;meta name=&quot;x5-page-mode&quot; content=&quot;app&quot;&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"UC浏览器\"><a href=\"#UC浏览器\" class=\"headerlink\" title=\"UC浏览器\"></a>UC浏览器</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- 在指定方向上锁定屏幕（锁定横/竖屏） --&gt;</div><div class=\"line\">&lt;meta name=&quot;x5-orientation&quot; content=&quot;landscape/portrait&quot;&gt;</div><div class=\"line\">&lt;!-- 全屏显示此页面 --&gt;</div><div class=\"line\">&lt;meta name=&quot;x5-fullscreen&quot; content=&quot;true&quot;&gt;</div><div class=\"line\">&lt;!-- 页面将以“应用模式”显示（全屏等）--&gt;</div><div class=\"line\">&lt;meta name=&quot;x5-page-mode&quot; content=&quot;app&quot;&gt;</div></pre></td></tr></table></figure>\n","categories":["技术"],"tags":["HTML"]},{"title":"Markdown 基本语法","url":"https://ln-bates.github.io/2017/03/18/Markdown-基本语法/","content":"<p>Markdown是一种纯文本格式的标记语言。通过简单的标记语法，它可以使普通文本内容具有一定的格式。</p>\n<h4 id=\"优点：\"><a href=\"#优点：\" class=\"headerlink\" title=\"优点：\"></a>优点：</h4><ol>\n<li>因为是纯文本，所以只要支持Markdown的地方都能获得一样的编辑效果，可以让作者摆脱排版的困扰，专心写作。</li>\n<li>操作简单。比如:WYSIWYG编辑时标记个标题，先选中内容，再点击导航栏的标题按钮，选择几级标题。要三个步骤。而Markdown只需要在标题内容前加#即可<h4 id=\"缺点：\"><a href=\"#缺点：\" class=\"headerlink\" title=\"缺点：\"></a>缺点：</h4></li>\n<li>需要记一些语法（当然，是很简单。五分钟学会）。</li>\n<li>有些平台不支持Markdown编辑模式。</li>\n</ol>\n<h3 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题:\"></a>标题:</h3><p>在想要设置为标题的文字前加#来表示<br>一个#是一级标题,两个#是二级标题,依次类推。支持六级标题。</p>\n<h4 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例:\"></a>示例:</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 这是一级标题</div><div class=\"line\">## 这是二级标题</div><div class=\"line\">### 这是三级标题</div><div class=\"line\">#### 这是四级标题</div><div class=\"line\">##### 这是五级标题</div><div class=\"line\">###### 这是六级标题</div></pre></td></tr></table></figure>\n<h4 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果:\"></a>效果:</h4><h1 id=\"这是一级标题\"><a href=\"#这是一级标题\" class=\"headerlink\" title=\"这是一级标题\"></a>这是一级标题</h1><h2 id=\"这是二级标题\"><a href=\"#这是二级标题\" class=\"headerlink\" title=\"这是二级标题\"></a>这是二级标题</h2><h3 id=\"这是三级标题\"><a href=\"#这是三级标题\" class=\"headerlink\" title=\"这是三级标题\"></a>这是三级标题</h3><h4 id=\"这是四级标题\"><a href=\"#这是四级标题\" class=\"headerlink\" title=\"这是四级标题\"></a>这是四级标题</h4><h5 id=\"这是五级标题\"><a href=\"#这是五级标题\" class=\"headerlink\" title=\"这是五级标题\"></a>这是五级标题</h5><h6 id=\"这是六级标题\"><a href=\"#这是六级标题\" class=\"headerlink\" title=\"这是六级标题\"></a>这是六级标题</h6><hr>\n<h3 id=\"字体\"><a href=\"#字体\" class=\"headerlink\" title=\"字体:\"></a>字体:</h3><ol>\n<li>加粗: 在需要加粗的文字两边加上两个**号</li>\n<li>斜体: 在需要加粗的文字两边加上一个*号</li>\n<li>斜粗体: 在需要加粗的文字两边加上三个<em>*</em>号</li>\n<li>删除线: 在需要加粗的文字两边加上两个~~号<h4 id=\"示例-1\"><a href=\"#示例-1\" class=\"headerlink\" title=\"示例:\"></a>示例:</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">**加粗**</div><div class=\"line\">*倾斜*`</div><div class=\"line\">***斜粗体***</div><div class=\"line\">~~删除线~~</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"效果-1\"><a href=\"#效果-1\" class=\"headerlink\" title=\"效果:\"></a>效果:</h4><p><strong>加粗</strong><br><em>倾斜</em>`<br><strong><em>斜粗体</em></strong></p>\n<h2 id=\"删除线\"><a href=\"#删除线\" class=\"headerlink\" title=\"删除线\"></a><del>删除线</del></h2><h3 id=\"分割线\"><a href=\"#分割线\" class=\"headerlink\" title=\"分割线:\"></a>分割线:</h3><p>三个或者三个以上的 - 或者 * 都可以。</p>\n<h4 id=\"示例-2\"><a href=\"#示例-2\" class=\"headerlink\" title=\"示例:\"></a>示例:</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&quot;---&quot;</div><div class=\"line\">&quot;----&quot;</div><div class=\"line\">&quot;***&quot;</div><div class=\"line\">&quot;*****&quot;</div></pre></td></tr></table></figure>\n<h4 id=\"效果-2\"><a href=\"#效果-2\" class=\"headerlink\" title=\"效果:\"></a>效果:</h4><h2 id=\"—\"><a href=\"#—\" class=\"headerlink\" title=\"—\"></a>—</h2><hr>\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"*\"></a><strong>*</strong></h2><h3 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片:\"></a>图片:</h3><h4 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法:\"></a>语法:</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">![图片alt](图片地址 &apos;&apos;图片title&apos;&apos;)</div><div class=\"line\"></div><div class=\"line\">图片alt就是显示在图片下面的文字，相当于对图片内容的解释。</div><div class=\"line\">图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加</div></pre></td></tr></table></figure>\n<h4 id=\"示例-3\"><a href=\"#示例-3\" class=\"headerlink\" title=\"示例:\"></a>示例:</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">![blockchain](https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/</div><div class=\"line\">u=702257389,1274025419&amp;fm=27&amp;gp=0.jpg &quot;区块链&quot;)</div></pre></td></tr></table></figure>\n<h4 id=\"效果-3\"><a href=\"#效果-3\" class=\"headerlink\" title=\"效果:\"></a>效果:</h4><p>![blockchain](<a href=\"https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/\" target=\"_blank\" rel=\"external\">https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/</a></p>\n<h2 id=\"u-702257389-1274025419-amp-fm-27-amp-gp-0-jpg-“区块链”\"><a href=\"#u-702257389-1274025419-amp-fm-27-amp-gp-0-jpg-“区块链”\" class=\"headerlink\" title=\"u=702257389,1274025419&amp;fm=27&amp;gp=0.jpg “区块链”)\"></a>u=702257389,1274025419&amp;fm=27&amp;gp=0.jpg “区块链”)</h2><h3 id=\"超链接\"><a href=\"#超链接\" class=\"headerlink\" title=\"超链接:\"></a>超链接:</h3><h4 id=\"语法-1\"><a href=\"#语法-1\" class=\"headerlink\" title=\"语法:\"></a>语法:</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">[超链接名](超链接地址 &quot;超链接title&quot;)</div><div class=\"line\">title可加可不加</div></pre></td></tr></table></figure>\n<h4 id=\"示例-4\"><a href=\"#示例-4\" class=\"headerlink\" title=\"示例:\"></a>示例:</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">[blog](https://ln-bates.github.io/)</div></pre></td></tr></table></figure>\n<h4 id=\"效果-4\"><a href=\"#效果-4\" class=\"headerlink\" title=\"效果:\"></a>效果:</h4><h2 id=\"blog\"><a href=\"#blog\" class=\"headerlink\" title=\"blog\"></a><a href=\"https://ln-bates.github.io/\">blog</a></h2><h3 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格:\"></a>表格:</h3><h4 id=\"语法-2\"><a href=\"#语法-2\" class=\"headerlink\" title=\"语法:\"></a>语法:</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">表头|表头|表头</div><div class=\"line\">---|:--:|---:</div><div class=\"line\">内容|内容|内容</div><div class=\"line\">内容|内容|内容</div><div class=\"line\"></div><div class=\"line\">第二行分割表头和内容。</div><div class=\"line\">- 有一个就行，为了对齐，多加了几个</div><div class=\"line\">文字默认居左</div><div class=\"line\">-两边加：表示文字居中</div><div class=\"line\">-右边加：表示文字居右</div><div class=\"line\">注：原生的语法两边都要用 | 包起来。此处省略</div></pre></td></tr></table></figure>\n<h4 id=\"示例-5\"><a href=\"#示例-5\" class=\"headerlink\" title=\"示例:\"></a>示例:</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">表头|表头|表头</div><div class=\"line\">---|:--:|---:</div><div class=\"line\">内容|内容|内容</div><div class=\"line\">内容|内容|内容</div></pre></td></tr></table></figure>\n<h4 id=\"效果-5\"><a href=\"#效果-5\" class=\"headerlink\" title=\"效果:\"></a>效果:</h4><table>\n<thead>\n<tr>\n<th>表头</th>\n<th style=\"text-align:center\">表头</th>\n<th style=\"text-align:right\">表头</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>内容</td>\n<td style=\"text-align:center\">内容</td>\n<td style=\"text-align:right\">内容</td>\n</tr>\n<tr>\n<td>内容</td>\n<td style=\"text-align:center\">内容</td>\n<td style=\"text-align:right\">内容</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码:\"></a>代码:</h3><p>单行代码：代码之间分别用一个反引号包起来<br>代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行</p>\n<h4 id=\"语法-3\"><a href=\"#语法-3\" class=\"headerlink\" title=\"语法:\"></a>语法:</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">`code;`</div><div class=\"line\"></div><div class=\"line\">(```)</div><div class=\"line\">  代码...</div><div class=\"line\">  代码...</div><div class=\"line\">  代码...</div><div class=\"line\">(```)</div></pre></td></tr></table></figure>\n<h4 id=\"效果-6\"><a href=\"#效果-6\" class=\"headerlink\" title=\"效果:\"></a>效果:</h4><p><code>code;</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">console.log(&apos;code block&apos;);</div></pre></td></tr></table></figure>\n<hr>\n","categories":["技术"],"tags":["其他"]},{"title":"Start Hexo Project","url":"https://ln-bates.github.io/2017/03/05/hello-world/","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This’s your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","categories":["技术"],"tags":["其他"]},{"title":"category","url":"https://ln-bates.github.io/category/index.html","content":"","categories":[],"tags":[]},{"title":"link","url":"https://ln-bates.github.io/link/index.html","content":"","categories":[],"tags":[]},{"title":"search","url":"https://ln-bates.github.io/search/index.html","content":"","categories":[],"tags":[]},{"title":"project","url":"https://ln-bates.github.io/project/index.html","content":"","categories":[],"tags":[]},{"title":"tag","url":"https://ln-bates.github.io/tag/index.html","content":"","categories":[],"tags":[]},{"title":"","url":"https://ln-bates.github.io/css/style.css","content":".content.content-about .dot.icon{\n    display: flex;\n    display: -webkit-flex;\n    align-items: center;\n    justify-content: center;\n}","categories":[],"tags":[]},{"title":"about","url":"https://ln-bates.github.io/about/index.html","content":"","categories":[],"tags":[]}]